name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release (e.g., v1.0.0)"
        required: true
        type: string

concurrency:
  group: ${{ github.repository }}-release
  cancel-in-progress: false

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    name: Run Tests
    uses: ./.github/workflows/test.yml

  release:
    runs-on: ubuntu-latest
    name: Create Release
    needs: test
    steps:
      - name: Determine tag
        id: tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="${{ github.ref_name }}"
          fi
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "version=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Validate tag format
        run: |
          if [[ ! "${{ steps.tag.outputs.tag }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid tag format: ${{ steps.tag.outputs.tag }}"
            echo "Tag must follow semantic versioning (e.g., v1.0.0)"
            echo "Valid format: vMAJOR.MINOR.PATCH (e.g., v1.0.0, v2.1.3)"
            exit 1
          fi
          echo "✅ Tag format is valid: ${{ steps.tag.outputs.tag }}"

      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Check if tag exists
        run: |
          if git rev-parse "${{ steps.tag.outputs.tag }}" >/dev/null 2>&1; then
            echo "✅ Tag ${{ steps.tag.outputs.tag }} exists"
          else
            echo "❌ Tag ${{ steps.tag.outputs.tag }} does not exist"
            if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
              echo "Creating tag ${{ steps.tag.outputs.tag }}"
              git tag "${{ steps.tag.outputs.tag }}"
              git push origin "${{ steps.tag.outputs.tag }}"
            else
              exit 1
            fi
          fi

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          echo "" >> CHANGELOG.md
          echo "## ${{ steps.tag.outputs.tag }} - $(date +'%Y-%m-%d')" >> CHANGELOG.md
          echo "Full Changelog: https://github.com/${{ github.repository }}/compare/${PREV_TAG}...${{ steps.tag.outputs.tag }}" >> CHANGELOG.md

      - name: Create GitHub Release
        id: create_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create the release using GitHub CLI
          RELEASE_URL=$(gh release create "${{ steps.tag.outputs.tag }}" \
            --title "Release ${{ steps.tag.outputs.tag }}" \
            --notes-file CHANGELOG.md \
            --latest)
          
          echo "url=${RELEASE_URL}" >> $GITHUB_OUTPUT

      - name: Update version tag aliases
        run: |
          TAG="${{ steps.tag.outputs.tag }}"
          VERSION="${{ steps.tag.outputs.version }}"
          
          # Extract version components (remove 'v' prefix)
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)
          
          echo "📋 Creating tag aliases for $TAG:"
          echo "  - v${MAJOR} (major)"
          echo "  - v${MAJOR}.${MINOR} (major.minor)"
          echo "  - v${MAJOR}.${MINOR}.${PATCH} (full version - already exists)"
          
          # Create array of alias tags to update
          ALIAS_TAGS=("v${MAJOR}" "v${MAJOR}.${MINOR}")
          
          for ALIAS_TAG in "${ALIAS_TAGS[@]}"; do
            echo "🏷️  Updating tag alias: $ALIAS_TAG"
            
            # Delete existing alias tag if it exists (locally and remotely)
            git tag -d "$ALIAS_TAG" 2>/dev/null || echo "  Local tag $ALIAS_TAG does not exist"
            git push --delete origin "$ALIAS_TAG" 2>/dev/null || echo "  Remote tag $ALIAS_TAG does not exist"
            
            # Create new alias tag pointing to the same commit as the full version tag
            git tag "$ALIAS_TAG" "$TAG"
            git push origin "$ALIAS_TAG"
            
            echo "  ✅ Tag $ALIAS_TAG created and pushed"
          done
          
          echo "🎯 All tag aliases updated successfully!"
          echo "Users can now reference this action using:"
          echo "  - uses: ${{ github.repository }}@v${MAJOR}"
          echo "  - uses: ${{ github.repository }}@v${MAJOR}.${MINOR}"
          echo "  - uses: ${{ github.repository }}@${TAG}"

      - name: Done
        run: |
          echo "🎯 Release ${{ steps.tag.outputs.tag }} created successfully!"
          echo "🔗 Release URL: ${{ steps.create_release.outputs.url }}"

