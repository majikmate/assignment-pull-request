#!/bin/bash
set -euo pipefail

# Secure wrapper for rsync operations needed by githook
# Only allows syncing from temp directories to working tree with majikmate ownership

# Source centralized user utilities
SCRIPT_DIR=$(dirname "${BASH_SOURCE[0]}")
source "$SCRIPT_DIR/userutil.sh"

# Validate arguments
if [ "$#" -ne 2 ]; then
    echo "Error: Invalid number of arguments" >&2
    exit 1
fi

SOURCE="$1"
DEST="$2"

# Get the real user who invoked sudo (not root) using centralized utility
REAL_USER=$(get_validated_real_user)

# Security validations
# 1. Resolve all paths to absolute canonical paths to prevent traversal
SOURCE_REAL=$(realpath "$SOURCE" 2>/dev/null) || {
    echo "Error: Cannot resolve source path" >&2
    exit 1
}
DEST_REAL=$(realpath "$DEST" 2>/dev/null) || {
    echo "Error: Cannot resolve destination path" >&2
    exit 1
}

# 2. Source must be under /tmp and match our specific pattern
if [[ ! "$SOURCE_REAL" =~ ^/tmp/majikmate-protect-sync-stage-[a-zA-Z0-9]{10,}$ ]]; then
    echo "Error: Invalid source directory pattern" >&2
    exit 1
fi

# 3. Source must exist, be a directory, not be a symlink, and be owned by current user
if [ ! -d "$SOURCE_REAL" ] || [ -L "$SOURCE_REAL" ]; then
    echo "Error: Source must be a real directory, not a symlink" >&2
    exit 1
fi

SOURCE_OWNER=$(stat -c '%U' "$SOURCE_REAL" 2>/dev/null) || {
    echo "Error: Cannot determine source ownership" >&2
    exit 1
}

if [ "$SOURCE_OWNER" != "$REAL_USER" ]; then
    echo "Error: Source directory must be owned by current user" >&2
    exit 1
fi

# 4. Destination must exist, be a directory, not be a symlink
if [ ! -d "$DEST_REAL" ] || [ -L "$DEST_REAL" ]; then
    echo "Error: Destination must be a real directory, not a symlink" >&2
    exit 1
fi

# 5. Destination must contain .git (be a git repository)
if [ ! -e "$DEST_REAL/.git" ]; then
    echo "Error: Destination is not a git repository" >&2
    exit 1
fi

# 6. Destination must not be under sensitive system directories (defense-in-depth)
case "$DEST_REAL" in
    /etc/*|/usr/*|/bin/*|/sbin/*|/boot/*|/sys/*|/proc/*|/dev/*)
        echo "Error: Cannot sync to system directories" >&2
        exit 1
        ;;
esac

# 7. Destination must be under /workspaces (primary location restriction)
if [[ ! "$DEST_REAL" =~ ^/workspaces/ ]]; then
    echo "Error: Destination must be under /workspaces directory" >&2
    exit 1
fi

# 8. Parent directory of destination must be owned by current user (prevent cross-user access)
DEST_PARENT=$(dirname "$DEST_REAL")
DEST_PARENT_OWNER=$(stat -c '%U' "$DEST_PARENT" 2>/dev/null) || {
    echo "Error: Cannot determine destination parent ownership" >&2
    exit 1
}

if [ "$DEST_PARENT_OWNER" != "$REAL_USER" ]; then
    echo "Error: Destination parent directory must be owned by current user" >&2
    exit 1
fi

# 9. Additional safety: Ensure source has trailing slash for rsync safety
if [[ ! "$SOURCE" =~ /$ ]]; then
    echo "Error: Source must end with trailing slash" >&2
    exit 1
fi

# Execute the specific rsync operation we need with explicit, safe parameters
exec rsync \
    --archive \
    --verbose \
    --delete \
    --no-owner \
    --no-group \
    --omit-dir-times \
    --chown=majikmate:majikmate \
    --no-specials \
    --no-devices \
    --safe-links \
    --exclude='.git' \
    --exclude='.git/' \
    --exclude='.git/*' \
    "$SOURCE_REAL/" \
    "$DEST_REAL"